/*
 *  Abuse - dark 2D side-scrolling platform game
 *  Copyright (c) 2014 Daniel Potter <dmpotter44@gmail.com>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software Foundation,
 *  Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 */

#ifndef __EVENT_HPP_
#define __EVENT_HPP_

#include "SDL.h"

class EventHandler
{
public:
    void PushUIEvent(int id, void* widget);
    ivec2 GetMousePos();
    void SetMousePos(ivec2 pos);
    void SysWarpMouse(ivec2 pos);
    /**
     * Apply mouse scaling so that a given x,y generated by SDL is corrected to
     * be the correct location on the Abuse screen.
     */
    void ScaleMouse(Sint32& x, Sint32& y);
    int IsPending();
    void SysEvent(SDL_Event &ev);
private:
    // "Dead zone" before motion of a stick "counts".
    // Maximum stick values are 0x7FFF, currently I've
    // arbitrarily set this to 1/4th.
    int m_dead_zone = 0x2000;
    // Scale amount for the right stick when moving the mouse. The range is
    // -0x7FFF to 0x7FFF, or -32767 to 32767. The default means it will move
    // a maximum of 3 pixels per tick.
    int m_right_stick_scale = 0x2000;
    // Scale amount for the right stick when it's player-locked.
    // 0x400 gives a range of -31 to 31.
    int m_right_stick_player_scale = 0x400;
    int m_right_stick_x, m_right_stick_y;
};

#endif // __EVENT_HPP_
